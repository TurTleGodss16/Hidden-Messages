#Count occurences of a pattern in string
def CountOverlap(string, sub):
    count = start = 0
    while True:
        start = string.find(sub, start) + 1
        if start > 0:
            count += 1
        else:
            return count
str = "AGTATAACTCCGAACTCCGCAACTCCGCAACTCCGAACTCCGTAACTCCGGAGCTAAAAAACTCCGAGAACTCCGCAAGTTTCCAAACTCCGCGAGGAGAACTCCGCCGGCCAACTCCGTCAACTCCGAACTCCGAACTCCGATGCTAACTCCGAGTTAACTCCGCACCGAACTCCGCACACAACTCCGAACTCCGTACTCACAACTCCGTAGGGTTAAACTCCGGAATTCGATCAACTCCGGAACTCCGAACTCCGTTAACTCCGTCCCAACTCCGTAACTCCGTGTACAAACTCCGAGAACTCCGTGAACTCCGCATCGCTGTAACTCCGCATAACTCCGAACTCCGGAACTCCGAACTCCGAGGCATCCTCCCGGAACTCCGTTACTGGTGTGAACTCCGGAACTCCGTCTAACTCCGCGAACTCCGCGACAACTCCGAAACTCCGCAAAGAACTCCGAACTCCGCTAACAACTCCGCGAACTCCGGAACTCCGTAACTCCGGAACTCCGGAAACTCCGGAACTCCGCAACTCCGGCGGAACTCCGAACTCCGGTAACTCCGCCAACTCCGGCTGCAACTCCGAAGATAACTCCGGGTGGCAACTCCGAACTCCGCAACTCCGTGATCTTAACTCCGGTCAACTCCGTAACTCCGAACTCCGGTGCCCTCAACTCCGCTCAACTCCGGAACTCCGCGAACTCCGGGTAACTCCGCATGAACTCCGGAAGCGAACTCCGCTTCTAACTCCGAACTCCGAACTCCGGCTGAACTCCGAACTCCGAAACTCCGAACTCCGGCCCAAAACTCCGTTAAACTCCGAACTCCGCGCATTCGACGTAACTCCGGCAACTCCGGAACTCCGCCCACAACTCCGAGCAACTCCGTCCTGAACTCCGCCCCAACTCCGCGGAACTCCGTCAAACTCCGTGAACTCCGAACTCCGACAACTCCG"
print(CountOverlap(str, "AACTCCGAA"))

'''Pseudocode for this formulation: Denote: |String| and |Sub| are the amount of symbols in String and Sub
            def Text(x, |String|):
                return String[ x : |String| ]
            def Count(String, Sub):
                count = 0
                for i = 0 to |String| - |Sub|:
                    if Text(i, |Sub|) = Sub:
                        count++;
                return count'''
